---
description: overview about this project.
globs: 
alwaysApply: false
---
# 八字计算MCP服务器项目指南

## 🎯 项目概述
这是一个基于TypeScript的专业八字计算MCP服务器，使用`lunar-javascript`库提供八字计算服务。项目已完成现代化API升级，采用最新MCP SDK，可通过npm包`@mymcp-fun/bazi@2.0.2`一行命令使用。

## 📁 项目结构

### 核心源代码
- [src/server.ts](mdc:src/server.ts) - MCP服务器主入口，使用新版McpServer API和registerTool方法
- [src/bazi-service.ts](mdc:src/bazi-service.ts) - 八字计算核心服务，包装lunar-javascript库
- [src/types.ts](mdc:src/types.ts) - TypeScript类型定义，包含输入输出接口

### 配置文件
- [package.json](mdc:package.json) - npm包配置，依赖管理，构建脚本
- [tsconfig.json](mdc:tsconfig.json) - TypeScript开发配置
- [tsconfig.build.json](mdc:tsconfig.build.json) - TypeScript生产构建配置

### 测试文件
- [tests/final-accuracy-test.js](mdc:tests/final-accuracy-test.js) - 最终准确性测试，验证100%兼容性
- [tests/test-mcp-server.js](mdc:tests/test-mcp-server.js) - MCP服务器功能测试
- [tests/basic-functionality.js](mdc:tests/basic-functionality.js) - 基础功能测试
- [tests/test-lunar-javascript.js](mdc:tests/test-lunar-javascript.js) - lunar-javascript库API测试

### 文档
- [README.md](mdc:README.md) - 项目说明文档，包含安装使用指南
- [LICENSE](mdc:LICENSE) - MIT开源许可证

## 🔧 技术栈

### 核心依赖
- **@modelcontextprotocol/sdk**: 最新MCP协议SDK，使用McpServer类
- **zod**: Schema验证库，版本3.25.67+
- **lunar-javascript**: 权威的中文农历计算库，1600+周下载量
- **TypeScript**: 类型安全的JavaScript超集，版本5.0+
- **Node.js**: 运行环境，要求18.0+

### 现代化API特性
- ✅ **McpServer类**: 替代旧版Server类，更简洁的API
- ✅ **registerTool方法**: 自动处理MCP协议细节
- ✅ **Zod验证**: 内置参数验证和类型安全
- ✅ **简化代码**: 从173行减少到89行（48%缩减）

## 🎯 核心功能

### MCP工具: get_bazi_details
计算生辰八字和五行信息的主要工具

**输入参数**:
```typescript
interface BaziToolInput {
  year: number;        // 出生年份 (1900-2100)
  month: number;       // 出生月份 (1-12)
  day: number;         // 出生日期 (1-31)
  hour: number;        // 出生时间 (0-23)
  gender?: string;     // 性别 (可选，默认male)
  timezone?: string;   // 时区 (可选，默认Asia/Shanghai)
}
```

**输出结果** (使用中文字段名):
```typescript
interface BaziResult {
  四柱: {              // 四柱信息
    年柱: string;      // 年柱，如"乙酉"
    月柱: string;      // 月柱，如"己丑"
    日柱: string;      // 日柱，如"丁巳"
    时柱: string;      // 时柱，如"壬子"
  };
  五行: {              // 五行分析（整数计数）
    木: number;        // 木，如1
    火: number;        // 火，如2
    土: number;        // 土，如2
    金: number;        // 金，如1
    水: number;        // 水，如2
  };
  生肖: string;        // 生肖，如"鸡"
  星座: string;        // 星座，如"水瓶"
  农历: {              // 农历日期
    农历年: number;
    农历月: number;
    农历日: number;
    是否闰月: boolean;
    农历月名: string;  // 如"腊月"
  };
  日主: string;        // 日主天干，如"丁"
}
```

## 🚀 使用方式

### 直接运行
```bash
npx @mymcp-fun/bazi
```

### Claude Desktop配置
```json
{
  "mcpServers": {
    "bazi": {
      "command": "npx",
      "args": ["-y", "@mymcp-fun/bazi"]
    }
  }
}
```

## 🔨 开发指南

### 构建项目
```bash
npm run build
```

### 开发模式
```bash
npm run dev
```

### 运行测试
```bash
# 所有测试
npm test

# 单独测试
npm run test:accuracy   # 准确性测试
npm run test:mcp       # MCP服务器测试
npm run test:basic     # 基础功能测试
npm run test:lunar     # lunar-javascript API测试
```

## 📊 项目成就

### API现代化升级
- ✅ **新版MCP SDK**: 升级到McpServer + registerTool API
- ✅ **代码简化**: 48%代码减少，更易维护
- ✅ **Zod验证**: 现代化参数验证
- ✅ **类型安全**: 完整TypeScript类型定义

### 技术成就
- ✅ **100%准确率**: 与传统算法完全一致
- ✅ **零依赖问题**: 基于稳定的lunar-javascript库
- ✅ **MCP协议兼容**: 支持所有标准MCP客户端
- ✅ **中文本地化**: 使用中文字段名，符合用户习惯

### 用户体验
- ✅ **一行命令启动**: 无需复杂环境配置
- ✅ **跨平台兼容**: 支持Windows/macOS/Linux
- ✅ **现代化包管理**: 标准npm生态

### 质量保证
- ✅ **全面测试覆盖**: 4种测试场景验证
- ✅ **专业文档**: 详细的使用说明和正确示例
- ✅ **开源协议**: MIT许可证，商业友好

## 🔍 调试指南

### 本地调试
1. 运行构建：`npm run build`
2. 启动服务器：`node dist/server.js`
3. 查看stderr日志输出

### MCP Inspector
使用官方MCP Inspector工具进行交互式调试：
```bash
npx @modelcontextprotocol/inspector
```

### 测试特定场景
修改测试文件中的日期时间参数，验证不同案例的计算结果。

## 🔄 最新更新历史

### v2.0.2 (当前版本)
- 🔧 简化版本描述
- 📝 修复README.md返回结果示例
- ✅ 更新文档中的字段名为中文

### v2.0.1
- 🚀 完成MCP SDK API升级
- ⚡ 代码优化，减少48%行数
- 🛡️ 添加Zod验证
- 🗑️ 移除不必要的主模块检测逻辑

---
**项目状态**: 已完成并可生产使用  
**当前版本**: 2.0.2  
**维护策略**: 定期更新依赖，修复发现的问题  
**联系方式**: howard@mymcp.fun
